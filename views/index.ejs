<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>URL Shortener - Make Your Links Short & Sweet</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      position: relative;
      overflow-x: hidden;
    }

    /* Animated background circles */
    body::before,
    body::after {
      content: '';
      position: absolute;
      width: 400px;
      height: 400px;
      border-radius: 50%;
      filter: blur(80px);
      opacity: 0.5;
      animation: float 20s infinite ease-in-out;
    }

    body::before {
      background: rgba(102, 126, 234, 0.4);
      top: -100px;
      left: -100px;
      animation-delay: -5s;
    }

    body::after {
      background: rgba(118, 75, 162, 0.4);
      bottom: -100px;
      right: -100px;
    }

    @keyframes float {
      0%, 100% { transform: translate(0, 0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
    }

    .container {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 24px;
      padding: 50px 40px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
      max-width: 600px;
      width: 100%;
      position: relative;
      z-index: 1;
      animation: slideUp 0.6s ease-out;
    }

    @keyframes slideUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .header {
      text-align: center;
      margin-bottom: 40px;
    }

    .header h1 {
      font-size: 2.5rem;
      font-weight: 800;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 12px;
    }

    .header p {
      color: #666;
      font-size: 1rem;
      font-weight: 500;
    }

    .input-group {
      margin-bottom: 20px;
    }

    .input-group label {
      display: block;
      color: #333;
      font-weight: 600;
      margin-bottom: 8px;
      font-size: 0.9rem;
    }

    .input-wrapper {
      position: relative;
    }

    .input-wrapper::before {
      content: 'üîó';
      position: absolute;
      left: 16px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 1.2rem;
      pointer-events: none;
    }

    input[type="text"] {
      width: 100%;
      padding: 16px 16px 16px 50px;
      border: 2px solid #e0e0e0;
      border-radius: 12px;
      font-size: 1rem;
      font-family: inherit;
      transition: all 0.3s ease;
      background: white;
    }

    input[type="text"]:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
    }

    input[type="text"]::placeholder {
      color: #999;
    }

    #custom {
      padding-left: 16px;
    }

    .custom-label-wrapper {
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .optional-badge {
      background: #f0f0f0;
      color: #666;
      padding: 2px 8px;
      border-radius: 4px;
      font-size: 0.75rem;
      font-weight: 600;
    }

    button[type="submit"] {
      width: 100%;
      padding: 18px;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      border-radius: 12px;
      font-size: 1.1rem;
      font-weight: 700;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
      position: relative;
      overflow: hidden;
    }

    button[type="submit"]:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);
    }

    button[type="submit"]:active {
      transform: translateY(0);
    }

    button[type="submit"]:disabled {
      opacity: 0.7;
      cursor: not-allowed;
      transform: none;
    }

    .loading {
      display: inline-block;
      width: 16px;
      height: 16px;
      border: 3px solid rgba(255, 255, 255, 0.3);
      border-top-color: white;
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
      margin-right: 8px;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    .result {
      margin-top: 30px;
      padding: 24px;
      border-radius: 12px;
      display: none;
      animation: fadeIn 0.4s ease-out;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .result.success {
      background: linear-gradient(135deg, #d4fc79 0%, #96e6a1 100%);
      border: 2px solid #4caf50;
      display: block;
    }

    .result.error {
      background: linear-gradient(135deg, #ffeaa7 0%, #fdcb6e 100%);
      border: 2px solid #f39c12;
      display: block;
    }

    .result-title {
      font-weight: 700;
      font-size: 1.1rem;
      margin-bottom: 12px;
      color: #2d3436;
    }

    .short-url-container {
      display: flex;
      gap: 10px;
      align-items: center;
      background: white;
      padding: 14px 18px;
      border-radius: 10px;
      margin-top: 12px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .short-url {
      flex: 1;
      color: #667eea;
      font-weight: 600;
      font-size: 1.1rem;
      text-decoration: none;
      word-break: break-all;
    }

    .short-url:hover {
      text-decoration: underline;
    }

    .copy-btn {
      background: #667eea;
      color: white;
      border: none;
      padding: 10px 18px;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
      white-space: nowrap;
      font-size: 0.9rem;
    }

    .copy-btn:hover {
      background: #5568d3;
      transform: scale(1.05);
    }

    .copy-btn:active {
      transform: scale(0.95);
    }

    .copy-btn.copied {
      background: #4caf50;
    }

    .error-message {
      color: #e74c3c;
      font-weight: 600;
      font-size: 1rem;
    }

    .footer {
      margin-top: 30px;
      text-align: center;
      color: #999;
      font-size: 0.85rem;
    }

    @media (max-width: 640px) {
      .container {
        padding: 40px 24px;
      }

      .header h1 {
        font-size: 2rem;
      }

      .header p {
        font-size: 0.9rem;
      }

      .short-url-container {
        flex-direction: column;
        align-items: stretch;
      }

      .copy-btn {
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>üîó URL Shortener</h1>
      <p>Make your links short, sweet, and shareable</p>
    </div>

    <form id="urlForm">
      <div class="input-group">
        <label for="longurl">Enter your long URL</label>
        <div class="input-wrapper">
          <input 
            type="text" 
            name="longurl" 
            id="longurl" 
            placeholder="https://example.com/your/very/long/url" 
            required 
          />
        </div>
      </div>

      <div class="input-group">
        <div class="custom-label-wrapper">
          <label for="custom">Custom alias</label>
          <span class="optional-badge">OPTIONAL</span>
        </div>
        <input 
          type="text" 
          name="custom" 
          id="custom" 
          placeholder="my-custom-link" 
        />
      </div>

      <button type="submit" id="submitBtn">
        <span id="btnText">‚ú® Shorten URL</span>
      </button>
    </form>

    <div class="result" id="result"></div>

    <div class="footer">
      Made with ‚ù§Ô∏è for the web
    </div>
  </div>

  <script>
    const form = document.getElementById('urlForm');
    const resultDiv = document.getElementById('result');
    const submitBtn = document.getElementById('submitBtn');
    const btnText = document.getElementById('btnText');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const longurl = document.getElementById('longurl').value.trim();
      const custom = document.getElementById('custom').value.trim();

      // Show loading state
      submitBtn.disabled = true;
      btnText.innerHTML = '<span class="loading"></span>Shortening...';
      resultDiv.style.display = 'none';

      try {
        const response = await fetch('/process', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ longurl, custom }),
        });

        const data = await response.json();

        if (response.ok) {
          const shortUrl = `${window.location.origin}/${data.shorturl}`;
          
          resultDiv.className = 'result success';
          resultDiv.innerHTML = `
            <div class="result-title">üéâ Your short URL is ready!</div>
            <div class="short-url-container">
              <a href="${shortUrl}" target="_blank" class="short-url" id="shortUrlLink">${shortUrl}</a>
              <button class="copy-btn" onclick="copyToClipboard('${shortUrl}', this)">
                üìã Copy
              </button>
            </div>
          `;
          
          // Reset form
          document.getElementById('custom').value = '';
        } else {
          resultDiv.className = 'result error';
          resultDiv.innerHTML = `
            <div class="error-message">‚ö†Ô∏è ${data.message}</div>
          `;
        }
      } catch (error) {
        resultDiv.className = 'result error';
        resultDiv.innerHTML = `
          <div class="error-message">‚ùå Something went wrong. Please try again.</div>
        `;
      } finally {
        // Reset button
        submitBtn.disabled = false;
        btnText.innerHTML = '‚ú® Shorten URL';
      }
    });

    function copyToClipboard(text, button) {
      navigator.clipboard.writeText(text).then(() => {
        const originalText = button.innerHTML;
        button.innerHTML = '‚úÖ Copied!';
        button.classList.add('copied');
        
        setTimeout(() => {
          button.innerHTML = originalText;
          button.classList.remove('copied');
        }, 2000);
      }).catch(() => {
        alert('Failed to copy. Please copy manually.');
      });
    }
  </script>
</body>
</html>
